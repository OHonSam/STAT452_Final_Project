upper_bound <- 2 * conf2[2] + conf4[2]
lower_bound
upper_bound
data5 <- read.csv("manuf.csv", header = TRUE)
str(data)
log_y <- log(data5$y)
log_k <- log(data5$k)
log_l <- log(data5$l)
log_e <- log(data5$e)
log_m <- log(data5$m)
model5 <- lm(log_y ~ log_k + log_l + log_e + log_m)
summary(model5)
model_reduce5b <- lm(log_y ~ log_e + log_m)
anova(model_reduce5b, model5)
model_reduce5c <- lm(log_y ~ log_l + log_m)
anova(model_reduce5c, model5)
model_reduce5d <- lm(log_y ~ log_m)
anova(model_reduce5d, model5)
coef <- coef(model5)
vcov <- vcov(model5)
R <- c(0, 1, 1, 1, 1)
k <- 1
Rb <- sum(coef[2:5])
SE <- sqrt(vcov[2, 2] + vcov[3, 3] + vcov[4, 4] + vcov[5, 5]
+ 2 * (vcov[2, 3] + vcov[2, 4] + vcov[2, 5]
+ vcov[3, 4] + + vcov[3, 5] + vcov[4, 5]))
t0 <- (sum(coef[2:5]) - k) / SE
t_crit <- qt(0.975, 20)
t0
t_crit
vif(model5)
library(car)
coef <- coef(model5)
vcov <- vcov(model5)
R <- c(0, 1, 1, 1, 1)
k <- 1
Rb <- sum(coef[2:5])
SE <- sqrt(vcov[2, 2] + vcov[3, 3] + vcov[4, 4] + vcov[5, 5]
+ 2 * (vcov[2, 3] + vcov[2, 4] + vcov[2, 5]
+ vcov[3, 4] + + vcov[3, 5] + vcov[4, 5]))
t0 <- (sum(coef[2:5]) - k) / SE
t_crit <- qt(0.975, 20)
t0
t_crit
vif(model5)
model_5f1 <- lm(log_y ~ log_k + log_l + log_m)
vif(model_5f1)
model_5f2 <- lm(log_y ~ log_k + log_l)
vif(model_5f2)
model_5f3 <- lm(log_y ~ log_k)
summary(model_5f3)
data6 <- read.csv("stockton4.csv", header = TRUE)
str(data6)
attach(data6)
model6 <- lm(sprice ~ livarea + age + beds + baths)
summary(model6)
confint(model6, 3)
conf2 <- confint(model6, 2)
conf4 <- confint(model6, 4)
lower_bound <- 2 * conf2[1] + conf4[1]
upper_bound <- 2 * conf2[2] + conf4[2]
lower_bound
upper_bound
data7 <- read.csv("stockton4.csv", header = TRUE)
str(data7)
attach(data7)
model7 <- lm(sprice ~ livarea + I(livarea^2) + age + I(age^2) + beds + I(livarea*beds)
+ I(livarea^2 * beds) + I(age * beds) + I(age^2 + beds))
summary(model7)
model7 <- lm(I(log(sprice)) ~ livarea + I(livarea^2) + age + I(age^2) + beds + I(livarea*beds)
+ I(livarea^2 * beds) + I(age * beds) + I(age^2 + beds))
summary(model7)
model7 <- lm(I(log(sprice)) ~ livarea + I(livarea^2) + age + I(age^2) + beds + I(livarea*beds)
+ I(livarea^2 * beds) + I(age * beds) + I(age^2 * beds))
summary(model7)
model7_2beds <- lm(I(log(sprice)) ~ livarea + I(livarea^2) + age + I(age^2) + 2
+ I(livarea*2) + I(livarea^2 * 2) + I(age * 2) + I(age^2 * 2))
model7_2beds <- lm(I(log(sprice)) ~ livarea + I(livarea^2) + age + I(age^2)
+ I(livarea*2) + I(livarea^2 * 2) + I(age * 2) + I(age^2 * 2))
summary(model7_2beds)
model7_2beds <- lm(I(log(sprice)) ~ livarea + I(livarea^2) + age + I(age^2))
summary(model7_2beds)
model7_2beds <- lm(I(log(sprice)) ~ livarea + I(livarea^2) + age + I(age^2)
+ I(livarea*2) + I(livarea^2 * 2) + I(age * 2) + I(age^2 * 2))
summary(model7_2beds)
model7_2beds <- lm(I(log(sprice)) ~ livarea + I(livarea^2) + age + I(age^2))
summary(model7_2beds)
reduced_model7 <- lm(I(log(sprice)) ~ livarea + I(livarea^2) + age + I(age^2) + I(livarea*beds))
anova(reduced_model7, model7)
model7c <- reduced_model7
summary(model7c)
reduced_model7 <- lm(I(log(sprice)) ~ livarea + I(livarea^2) + age + I(age^2) + I(livarea*beds))
anova(reduced_model7, model7)
model7c <- reduced_model7
summary(model7c)
fullModel <- model7
reducedModel <- model7c
AIC(fullModel)
AIC(reducedModel)
BIC(fullModel)
BIC(reducedModel)
data7 <- read.csv("stockton4.csv", header = TRUE)
str(data7)
attach(data7)
data7 <- read.csv("stockton4.csv", header = TRUE)
str(data7)
attach(data7)
data7 <- read.csv("stockton4.csv", header = TRUE)
str(data7)
detach(data6)
attach(data7)
detach(data6)
data7 <- read.csv("stockton4.csv", header = TRUE)
str(data7)
attach(data7)
detach(data7)
data7 <- read.csv("stockton4.csv", header = TRUE)
str(data7)
attach(data7)
detach(data7)
detach(data7)
detach(data7)
detach(data7)
detach(data7)
detach(data7)
detach(data7)
detach(data7)
detach(data7)
data7 <- read.csv("stockton4.csv", header = TRUE)
str(data7)
attach(data7)
data7 <- read.csv("stockton4.csv", header = TRUE)
str(data7)
detach(data6)
tinytex::install_tinytex()
data5 <- read.csv("manuf.csv", header = TRUE)
str(data5)
AIC(fullModel)
AIC(reducedModel)
AIC(fullModel)
AIC(reducedModel)
BIC(fullModel)
BIC(reducedModel)
model_d <- lm(totalscore ~ small + aide + tchexper + boy + freelunch + white_asian)
setwd("D:/University/R/22125095_Lab8")
data <- read.csv("star.csv", header = TRUE)
attach(data)
str(data)
regular_no_aide <- subset(data, regular == 1 & aide == 0)
regular_with_aide <- subset(data, regular == 1 & aide == 1)
smallClass <- subset(data, small == 1)
avg_score_regular_no_aide <- mean(regular_no_aide$totalscore)
avg_score_regular_no_aide
avg_score_regular_with_aide <- mean(regular_with_aide$totalscore)
avg_score_regular_with_aide
avg_score_smallClass<- mean(smallClass$totalscore)
avg_score_smallClass
model_b <- lm(totalscore ~ small + aide)
summary(model_b)
model_c <- lm(totalscore ~ small + aide + tchexper)
summary(model_c)
model_d <- lm(totalscore ~ small + aide + tchexper + boy + freelunch + white_asian)
summary(model_d)
model_d <- lm(totalscore ~ small + aide + tchexper + boy + freelunch + white_asian + tchwhite + tchmasters + schurban + schrural)
summary(model_d)
918+14
918.0429 + 13/899
918.0429 + 13.899
library(dplyr)
library(ggplot2)
library(tidyr)
data <- read.csv("auto_mpg.csv", header = TRUE, sep = ";")
attach(data)
head(data)
dim(data)
# Replace "?" with NA in the horsepower column
data$horsepower[data$horsepower == "?"] <- NA
# Convert horsepower to numeric (it was read as a factor due to "?")
data$horsepower <- as.numeric(as.character(data$horsepower))
# Check for missing values
missing_values <- sapply(data, function(x) sum(is.na(x)))
print(missing_values)
# Handle missing values in the 'horsepower' column
# Option 1: Remove rows with missing values
data_clean <- na.omit(data)
# Reasons:
# - The 'horsepower' column has only 6 missing values, so removing them will not affect the dataset significantly.
# - It avoids the risk of introducing bias or inaccuracies that might occur when estimating missing values.
# Option 2: Replace missing values with the mean (or median) of the column
# data$horsepower[is.na(data$horsepower)] <- mean(data$horsepower, na.rm = TRUE)
# remove car_name column in data_clean
data_clean <- select(data_clean, -car_name)
str(data_clean)
data_clean %>%
gather(key = "variable", value = "value") %>%
ggplot(aes(x = value)) +
facet_wrap(~ variable, scales = "free") +
geom_histogram(bins = 30) +
theme_minimal()
data_clean %>%
gather(key = "variable", value = "value") %>%
ggplot(aes(x = variable, y = value)) +
geom_boxplot() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Structure of data_clean
str(data_clean)
setwd("D:/University/R/Project/STAT452_Final_Project")
library(dplyr)
library(ggplot2)
library(tidyr)
model1 <- lm(mgp ~. , data = data_clean)
summary(model1)
set.seed(1)
sample_size <- floor(0.8 * nrow(data_clean))
train_indices <- sample(seq_len(nrow(data_clean)), size = sample_size)
train_data <- data_clean[train_indices, ]
test_data <- data_clean[-train_indices, ]
str(data_clean)
str(train_data)
library(dplyr)
library(ggplot2)
library(tidyr)
data <- read.csv("auto_mpg.csv", header = TRUE, sep = ";")
attach(data)
head(data)
dim(data)
# Replace "?" with NA in the horsepower column
data$horsepower[data$horsepower == "?"] <- NA
# Convert horsepower to numeric (it was read as a factor due to "?")
data$horsepower <- as.numeric(as.character(data$horsepower))
# Check for missing values
missing_values <- sapply(data, function(x) sum(is.na(x)))
print(missing_values)
# Handle missing values in the 'horsepower' column
# Option 1: Remove rows with missing values
data_clean <- na.omit(data)
# Reasons:
# - The 'horsepower' column has only 6 missing values, so removing them will not affect the dataset significantly.
# - It avoids the risk of introducing bias or inaccuracies that might occur when estimating missing values.
# Option 2: Replace missing values with the mean (or median) of the column
# data$horsepower[is.na(data$horsepower)] <- mean(data$horsepower, na.rm = TRUE)
# remove car_name column in data_clean
data_clean <- select(data_clean, -car_name)
str(data_clean)
data_clean %>%
gather(key = "variable", value = "value") %>%
ggplot(aes(x = value)) +
facet_wrap(~ variable, scales = "free") +
geom_histogram(bins = 30) +
theme_minimal()
data_clean %>%
gather(key = "variable", value = "value") %>%
ggplot(aes(x = variable, y = value)) +
geom_boxplot() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
set.seed(1)
sample_size <- floor(0.8 * nrow(data_clean))
train_indices <- sample(seq_len(nrow(data_clean)), size = sample_size)
data_train <- data_clean[train_indices, ]
data_test <- data_clean[-train_indices, ]
model1 <- lm(mgp ~. , data = data_clean)
summary(model1)
model1 <- lm(mgp ~. , data = data_train)
summary(model1)
vif(model1)
library(dplyr)
library(ggplot2)
library(tidyr)
library(car)
library(MASS)
data <- read.csv("auto_mpg.csv", header = TRUE, sep = ";")
attach(data)
head(data)
dim(data)
# Replace "?" with NA in the horsepower column
data$horsepower[data$horsepower == "?"] <- NA
# Convert horsepower to numeric (it was read as a factor due to "?")
data$horsepower <- as.numeric(as.character(data$horsepower))
# Check for missing values
missing_values <- sapply(data, function(x) sum(is.na(x)))
print(missing_values)
# Handle missing values in the 'horsepower' column
# Option 1: Remove rows with missing values
data_clean <- na.omit(data)
# Reasons:
# - The 'horsepower' column has only 6 missing values, so removing them will not affect the dataset significantly.
# - It avoids the risk of introducing bias or inaccuracies that might occur when estimating missing values.
# Option 2: Replace missing values with the mean (or median) of the column
# data$horsepower[is.na(data$horsepower)] <- mean(data$horsepower, na.rm = TRUE)
# remove car_name column in data_clean
data_clean <- select(data_clean, -car_name)
vif(model1)
library(dplyr)
library(ggplot2)
library(tidyr)
library(car)
library(MASS)
data <- read.csv("auto_mpg.csv", header = TRUE, sep = ";")
attach(data)
head(data)
dim(data)
# Replace "?" with NA in the horsepower column
data$horsepower[data$horsepower == "?"] <- NA
# Convert horsepower to numeric (it was read as a factor due to "?")
data$horsepower <- as.numeric(as.character(data$horsepower))
# Check for missing values
missing_values <- sapply(data, function(x) sum(is.na(x)))
print(missing_values)
# Handle missing values in the 'horsepower' column
# Option 1: Remove rows with missing values
data_clean <- na.omit(data)
# Reasons:
# - The 'horsepower' column has only 6 missing values, so removing them will not affect the dataset significantly.
# - It avoids the risk of introducing bias or inaccuracies that might occur when estimating missing values.
# Option 2: Replace missing values with the mean (or median) of the column
# data$horsepower[is.na(data$horsepower)] <- mean(data$horsepower, na.rm = TRUE)
# remove car_name column in data_clean
data_clean <- select(data_clean, -car_name)
vif(model1)
model1 <- lm(mgp ~ . -displacement, data = data_train)
vif(model1)
model1 <- lm(mgp ~ . -displacement, data = data_train)
vif(model1)
cor(model1)
model1 <- lm(mgp ~ . -displacement -weight, data = data_train)
vif(model1)
model1 <- lm(mgp ~ . -displacement, data = data_train)
vif(model1)
cor(weight, mpg)
model1 <- lm(mgp ~ . -displacement, data = data_train)
vif(model1)
cor(weight, mgp)
model1 <- lm(mgp ~ . -displacement, data = data_train)
vif(model1)
cor(mgp, weight)
model1 <- lm(mgp ~ . -displacement, data = data_train)
summary(model1)
vif(model1)
cor(mgp, weight)
model1 <- lm(mgp ~ . -displacement -weight, data = data_train)
summary(model1)
model1 <- lm(mgp ~ . -displacement -horsepower, data = data_train)
summary(model1)
vif(model1)
model1 <- lm(mgp ~ . -displacement -horsepower -cylinders, data = data_train)
summary(model1)
vif(model1)
cor_matrix <- cor(data_clean, use = "complete.obs")
cor_matrix <- cor(weight, use = "complete.obs")
cor_matrix <- cor(data_train, use = "complete.obs")
cor_matrix <- cor(data_train, use = "complete.obs")
cor_matrix
cor_matrix <- cor(data_train, use = "complete.obs")
cor_matrix
cor_matrix <- cor(data_train)
cor_matrix
model1 <- lm(mgp ~ . -displacement -horsepower -cylinders, data = data_train)
summary(model1)
cor_matrix <- cor(data_train)
cor_matrix
cor_matrix <- cor(data_train)
cor_matrix
data_train <- select(data_train, -weight)
library(dplyr)
library(ggplot2)
library(tidyr)
library(car)
library(MASS)
data <- read.csv("auto_mpg.csv", header = TRUE, sep = ";")
attach(data)
head(data)
dim(data)
# Replace "?" with NA in the horsepower column
data$horsepower[data$horsepower == "?"] <- NA
# Convert horsepower to numeric (it was read as a factor due to "?")
data$horsepower <- as.numeric(as.character(data$horsepower))
# Check for missing values
missing_values <- sapply(data, function(x) sum(is.na(x)))
print(missing_values)
# Handle missing values in the 'horsepower' column
# Option 1: Remove rows with missing values
data_clean <- na.omit(data)
# Reasons:
# - The 'horsepower' column has only 6 missing values, so removing them will not affect the dataset significantly.
# - It avoids the risk of introducing bias or inaccuracies that might occur when estimating missing values.
# Option 2: Replace missing values with the mean (or median) of the column
# data$horsepower[is.na(data$horsepower)] <- mean(data$horsepower, na.rm = TRUE)
# remove car_name column in data_clean
data_clean <- select(data_clean, -car_name)
# remove car_name column in data_clean
data_clean <- select(data_clean, -car_name)
# remove car_name column in data_clean
data_clean <- select(data_clean, -car_name)
# remove car_name column in data_clean
data_clean <- select(data_clean, -car_name)
# remove car_name column in data_clean
data_clean <- select(data_clean, -car_name)
str(data_clean)
# remove car_name column in data_clean
data_clean <- data_clean %<% select(-car_name)
library(dplyr)
library(ggplot2)
library(tidyr)
library(car)
library(MASS)
data <- read.csv("auto_mpg.csv", header = TRUE, sep = ";")
attach(data)
head(data)
dim(data)
# Replace "?" with NA in the horsepower column
data$horsepower[data$horsepower == "?"] <- NA
# Convert horsepower to numeric (it was read as a factor due to "?")
data$horsepower <- as.numeric(as.character(data$horsepower))
# Check for missing values
missing_values <- sapply(data, function(x) sum(is.na(x)))
print(missing_values)
# Handle missing values in the 'horsepower' column
# Option 1: Remove rows with missing values
data_clean <- na.omit(data)
# Reasons:
# - The 'horsepower' column has only 6 missing values, so removing them will not affect the dataset significantly.
# - It avoids the risk of introducing bias or inaccuracies that might occur when estimating missing values.
# Option 2: Replace missing values with the mean (or median) of the column
# data$horsepower[is.na(data$horsepower)] <- mean(data$horsepower, na.rm = TRUE)
# remove car_name column in data_clean
data_clean <- select(data_clean, -car_name)
library(dplyr)
library(ggplot2)
library(tidyr)
library(car)
library(MASS)
data <- read.csv("auto_mpg.csv", header = TRUE, sep = ";")
attach(data)
head(data)
dim(data)
# Replace "?" with NA in the horsepower column
data$horsepower[data$horsepower == "?"] <- NA
# Convert horsepower to numeric (it was read as a factor due to "?")
data$horsepower <- as.numeric(as.character(data$horsepower))
# Check for missing values
missing_values <- sapply(data, function(x) sum(is.na(x)))
print(missing_values)
# Handle missing values in the 'horsepower' column
# Option 1: Remove rows with missing values
data_clean <- na.omit(data)
# Reasons:
# - The 'horsepower' column has only 6 missing values, so removing them will not affect the dataset significantly.
# - It avoids the risk of introducing bias or inaccuracies that might occur when estimating missing values.
# Option 2: Replace missing values with the mean (or median) of the column
# data$horsepower[is.na(data$horsepower)] <- mean(data$horsepower, na.rm = TRUE)
# remove car_name column in data_clean
data_clean <- select(data_clean, -car_name)
# remove car_name column in data_clean
data_clean <- select(data_clean, -car_name)
# remove car_name column in data_clean
data_clean <- select(data_clean, -car_name)
# remove car_name column in data_clean
data_clean <- select(data_clean, -car_name)
library(dplyr)
library(ggplot2)
library(tidyr)
library(car)
library(MASS)
data <- read.csv("auto_mpg.csv", header = TRUE, sep = ";")
attach(data)
head(data)
dim(data)
# Replace "?" with NA in the horsepower column
data$horsepower[data$horsepower == "?"] <- NA
# Convert horsepower to numeric (it was read as a factor due to "?")
data$horsepower <- as.numeric(as.character(data$horsepower))
# Check for missing values
missing_values <- sapply(data, function(x) sum(is.na(x)))
print(missing_values)
# Handle missing values in the 'horsepower' column
# Option 1: Remove rows with missing values
data_clean <- na.omit(data)
# Reasons:
# - The 'horsepower' column has only 6 missing values, so removing them will not affect the dataset significantly.
# - It avoids the risk of introducing bias or inaccuracies that might occur when estimating missing values.
# Option 2: Replace missing values with the mean (or median) of the column
# data$horsepower[is.na(data$horsepower)] <- mean(data$horsepower, na.rm = TRUE)
# remove car_name column in data_clean
data_clean <- select(data_clean, -car_name)
library(dplyr)
library(ggplot2)
library(tidyr)
library(car)
library(MASS)
data <- read.csv("auto_mpg.csv", header = TRUE, sep = ";")
attach(data)
head(data)
dim(data)
# Replace "?" with NA in the horsepower column
data$horsepower[data$horsepower == "?"] <- NA
# Convert horsepower to numeric (it was read as a factor due to "?")
data$horsepower <- as.numeric(as.character(data$horsepower))
# Check for missing values
missing_values <- sapply(data, function(x) sum(is.na(x)))
print(missing_values)
# Handle missing values in the 'horsepower' column
# Option 1: Remove rows with missing values
data_clean <- na.omit(data)
# Reasons:
# - The 'horsepower' column has only 6 missing values, so removing them will not affect the dataset significantly.
# - It avoids the risk of introducing bias or inaccuracies that might occur when estimating missing values.
# Option 2: Replace missing values with the mean (or median) of the column
# data$horsepower[is.na(data$horsepower)] <- mean(data$horsepower, na.rm = TRUE)
# remove car_name column in data_clean
data_clean <- select(data_clean, -car_name)
