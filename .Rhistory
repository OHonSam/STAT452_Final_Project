library(dplyr)
library(ggplot2)
library(tidyr)
library(car)
library(MASS)
library(corrplot)
library(reshape2)
library(faraway)
library(caret)
data <- read.csv("master.csv", header = TRUE)
attach(data)
head(data)
str(data)
dim(data)
# Rename
data$gdp_for_year <- data$gdp_for_year....
data$gdp_for_year.... <- NULL
data$gdp_per_capita <- data$gdp_per_capita....
data$gdp_per_capita.... <- NULL
# Check for missing values
missing_values <- sapply(data, function(x) sum(is.na(x)))
print(missing_values)
data_clean <- data
data_clean <- dplyr::select(data_clean, -HDI.for.year, -country.year, -suicides.100k.pop)
# Convert gdp_for_year.... to numeric after removing commas
data_clean <- data_clean %>%
mutate(gdp_for_year = as.numeric(gsub(",", "", gdp_for_year)))
str(data_clean)
detach(data)
attach(data_clean)
hist(suicides_no, breaks = 50)
log_suicides_no <- log(suicides_no + 1)
hist(log_suicides_no, breaks = 30)
boxplot(log_suicides_no)
boxplot(year)
hist(year, breaks = 20)
pie(table(year))
pie(table(sex))
barplot(table(sex))
boxplot(log(population))
hist(log(gdp_per_capita)^2, breaks = 50)
boxplot(log(gdp_for_year))
hist(log(gdp_for_year), breaks = 20, main = "Histogram of GDP for Year", xlab = "GDP for Year")
barplot(table(generation))
pie(table(generation))
barplot(table(age))
pie(table(age))
data_clean$log_suicides_no <- log(suicides_no + 1)
data_clean$suicides_no <- NULL
# Process 'year' column
data_clean$year <- data_clean$year - 1985 + 1
# # Create dummy variables for the 'country' column
# dummy_vars <- model.matrix(~ country, data = data_clean)
#
# # Remove the intercept column
# dummy_vars <- dummy_vars[, -1]
#
# # Combine the dummy variables with the original data frame
# data_clean <- cbind(data_clean, dummy_vars)
#
# data_clean <- dplyr::select(data_clean, -country)
# str(data_clean)
# Define country groups based on continents or regions
data_clean$regionEurope <- ifelse(data_clean$country %in% c("Austria", "Iceland", "Netherlands", "Belgium", "Bulgaria", "France", "Greece", "Ireland", "Italy", "Luxembourg", "Malta", "Norway", "Portugal", "Romania", "Spain", "Sweden", "United Kingdom", "Ukraine", "Finland", "Switzerland", "Serbia", "Slovenia", "Slovakia", "Albania", "Denmark", "Estonia", "Latvia", "Lithuania", "Belarus", "Croatia", "Czech Republic", "Germany", "Hungary", "Poland", "San Marino", "Bosnia and Herzegovina"), 1, 0)
data_clean$regionAsia <- ifelse(data_clean$country %in% c("Israel", "Japan", "Republic of Korea", "Singapore", "Turkmenistan", "Thailand", "Russian Federation", "Kazakhstan", "Kyrgyzstan", "Armenia", "Azerbaijan", "Philippines", "Cyprus", "Qatar", "Sri Lanka", "Maldives", "Turkey", "United Arab Emirates", "Oman", "Bahrain", "Uzbekistan", "Georgia", "Macau"), 1, 0)
data_clean$regionAfrica <- ifelse(data_clean$country %in% c("Mauritius", "South Africa", "Seychelles", "Cabo Verde"), 1, 0)
data_clean$regionNorthAmerica <- ifelse(data_clean$country %in% c("Canada", "Costa Rica", "Guatemala", "Mexico", "Puerto Rico", "United States", "Belize", "Saint Lucia", "Antigua and Barbuda", "Trinidad and Tobago", "Panama", "Saint Vincent and Grenadines", "Cuba", "El Salvador", "Bahamas", "Jamaica", "Saint Kitts and Nevis", "Dominica"), 1, 0)
data_clean$regionSouthAmerica <- ifelse(data_clean$country %in% c("Argentina", "Brazil", "Chile", "Colombia", "Ecuador", "Paraguay", "Suriname", "Uruguay", "Guyana"), 1, 0)
data_clean$regionOceania <- ifelse(data_clean$country %in% c("Australia", "New Zealand", "Fiji", "Kiribati", "Montenegro"), 1, 0)
# Remove the 'country' column after creating 'region'
data_clean$country <- NULL
data_clean$sexMale <- ifelse(data_clean$sex == "male", 1, 0)
data_clean$sex <- NULL
data_clean$geneX <- ifelse(data_clean$generation == "Generation X", 1, 0)
data_clean$geneMillenials <- ifelse(data_clean$generation == "Millenials", 1, 0)
data_clean$geneBoomers <- ifelse(data_clean$generation == "Boomers", 1, 0)
data_clean$geneSilent <- ifelse(data_clean$generation == "Silent", 1, 0)
data_clean$generation <- NULL
# The other generation would be G.I. Generation
data_clean$Age15to24 <- ifelse(data_clean$age == "15-24 years", 1, 0)
data_clean$Age25to34 <- ifelse(data_clean$age == "25-34 years", 1, 0)
data_clean$Age35to54 <- ifelse(data_clean$age == "35-54 years", 1, 0)
data_clean$Age55to74 <- ifelse(data_clean$age == "55-74 years", 1, 0)
data_clean$age <- NULL
#The other generation would be 75+ years
str(data_clean)
set.seed(1)
sample_size <- floor(0.8 * nrow(data_clean))
train_indices <- sample(seq_len(nrow(data_clean)), size = sample_size)
data_train <- data_clean[train_indices, ]
data_test <- data_clean[-train_indices, ]
detach(data_clean)
attach(data_train)
cor_matrix <- cor(data_train)
cor_matrix
# corrplot(cor_matrix, method = "color", type = "upper",
#          tl.col = "black", tl.srt = 45, addCoef.col = "black")
#
# # Convert the correlation matrix to long format for ggplot2
# cor_matrix_melted <- melt(cor_matrix)
#
# # Visualize with ggplot2
# ggplot(data = cor_matrix_melted, aes(x = Var1, y = Var2, fill = value)) +
#   geom_tile(color = "white") +
#   scale_fill_gradient2(low = "blue", high = "red", mid = "white",
#                        midpoint = 0, limit = c(-1, 1), space = "Lab",
#                        name = "Correlation") +
#   theme_minimal() +
#   theme(axis.text.x = element_text(angle = 45, vjust = 1,
#                                    size = 12, hjust = 1)) +
#   coord_fixed()
model = lm(log_suicides_no ~ ., data = data_train)
summary(model)
vif(model)
model = lm(log_suicides_no ~ . -regionEurope , data = data_train)
summary(model)
vif(model)
# modFull = lm(log_suicides_no ~ . -mgp -displacement -horsepower -cylinders, data = data_train)
# modZero = lm(log_mgp_square ~ 1, data = data_train)
# modInter = lm(log_mgp_square ~ weight + model_year, data = data_train)
cor(log_suicides_no, regionEurope)
dim(log_suicides_no)
library(dplyr)
library(ggplot2)
library(tidyr)
library(car)
library(MASS)
library(corrplot)
library(reshape2)
library(faraway)
library(caret)
data <- read.csv("master.csv", header = TRUE)
attach(data)
head(data)
str(data)
dim(data)
# Rename
data$gdp_for_year <- data$gdp_for_year....
data$gdp_for_year.... <- NULL
data$gdp_per_capita <- data$gdp_per_capita....
data$gdp_per_capita.... <- NULL
# Check for missing values
missing_values <- sapply(data, function(x) sum(is.na(x)))
print(missing_values)
data_clean <- data
data_clean <- dplyr::select(data_clean, -HDI.for.year, -country.year, -suicides.100k.pop)
# Convert gdp_for_year.... to numeric after removing commas
data_clean <- data_clean %>%
mutate(gdp_for_year = as.numeric(gsub(",", "", gdp_for_year)))
str(data_clean)
detach(data)
attach(data_clean)
hist(suicides_no, breaks = 50)
log_suicides_no <- log(suicides_no + 1)
hist(log_suicides_no, breaks = 30)
boxplot(log_suicides_no)
boxplot(year)
hist(year, breaks = 20)
pie(table(year))
pie(table(sex))
barplot(table(sex))
boxplot(log(population))
hist(log(gdp_per_capita)^2, breaks = 50)
boxplot(log(gdp_for_year))
hist(log(gdp_for_year), breaks = 20, main = "Histogram of GDP for Year", xlab = "GDP for Year")
barplot(table(generation))
pie(table(generation))
barplot(table(age))
pie(table(age))
data_clean$log_suicides_no <- log(suicides_no + 1)
data_clean$suicides_no <- NULL
# Process 'year' column
data_clean$year <- data_clean$year - 1985 + 1
# # Create dummy variables for the 'country' column
# dummy_vars <- model.matrix(~ country, data = data_clean)
#
# # Remove the intercept column
# dummy_vars <- dummy_vars[, -1]
#
# # Combine the dummy variables with the original data frame
# data_clean <- cbind(data_clean, dummy_vars)
#
# data_clean <- dplyr::select(data_clean, -country)
# str(data_clean)
# Define country groups based on continents or regions
data_clean$regionEurope <- ifelse(data_clean$country %in% c("Austria", "Iceland", "Netherlands", "Belgium", "Bulgaria", "France", "Greece", "Ireland", "Italy", "Luxembourg", "Malta", "Norway", "Portugal", "Romania", "Spain", "Sweden", "United Kingdom", "Ukraine", "Finland", "Switzerland", "Serbia", "Slovenia", "Slovakia", "Albania", "Denmark", "Estonia", "Latvia", "Lithuania", "Belarus", "Croatia", "Czech Republic", "Germany", "Hungary", "Poland", "San Marino", "Bosnia and Herzegovina"), 1, 0)
data_clean$regionAsia <- ifelse(data_clean$country %in% c("Israel", "Japan", "Republic of Korea", "Singapore", "Turkmenistan", "Thailand", "Russian Federation", "Kazakhstan", "Kyrgyzstan", "Armenia", "Azerbaijan", "Philippines", "Cyprus", "Qatar", "Sri Lanka", "Maldives", "Turkey", "United Arab Emirates", "Oman", "Bahrain", "Uzbekistan", "Georgia", "Macau"), 1, 0)
data_clean$regionAfrica <- ifelse(data_clean$country %in% c("Mauritius", "South Africa", "Seychelles", "Cabo Verde"), 1, 0)
data_clean$regionNorthAmerica <- ifelse(data_clean$country %in% c("Canada", "Costa Rica", "Guatemala", "Mexico", "Puerto Rico", "United States", "Belize", "Saint Lucia", "Antigua and Barbuda", "Trinidad and Tobago", "Panama", "Saint Vincent and Grenadines", "Cuba", "El Salvador", "Bahamas", "Jamaica", "Saint Kitts and Nevis", "Dominica"), 1, 0)
data_clean$regionSouthAmerica <- ifelse(data_clean$country %in% c("Argentina", "Brazil", "Chile", "Colombia", "Ecuador", "Paraguay", "Suriname", "Uruguay", "Guyana"), 1, 0)
data_clean$regionOceania <- ifelse(data_clean$country %in% c("Australia", "New Zealand", "Fiji", "Kiribati", "Montenegro"), 1, 0)
# Remove the 'country' column after creating 'region'
data_clean$country <- NULL
data_clean$sexMale <- ifelse(data_clean$sex == "male", 1, 0)
data_clean$sex <- NULL
data_clean$geneX <- ifelse(data_clean$generation == "Generation X", 1, 0)
data_clean$geneMillenials <- ifelse(data_clean$generation == "Millenials", 1, 0)
data_clean$geneBoomers <- ifelse(data_clean$generation == "Boomers", 1, 0)
data_clean$geneSilent <- ifelse(data_clean$generation == "Silent", 1, 0)
data_clean$generation <- NULL
# The other generation would be G.I. Generation
data_clean$Age15to24 <- ifelse(data_clean$age == "15-24 years", 1, 0)
data_clean$Age25to34 <- ifelse(data_clean$age == "25-34 years", 1, 0)
data_clean$Age35to54 <- ifelse(data_clean$age == "35-54 years", 1, 0)
data_clean$Age55to74 <- ifelse(data_clean$age == "55-74 years", 1, 0)
data_clean$age <- NULL
#The other generation would be 75+ years
str(data_clean)
set.seed(1)
sample_size <- floor(0.8 * nrow(data_clean))
train_indices <- sample(seq_len(nrow(data_clean)), size = sample_size)
data_train <- data_clean[train_indices, ]
data_test <- data_clean[-train_indices, ]
detach(data_clean)
attach(data_train)
cor_matrix <- cor(data_train)
cor_matrix
# corrplot(cor_matrix, method = "color", type = "upper",
#          tl.col = "black", tl.srt = 45, addCoef.col = "black")
#
# # Convert the correlation matrix to long format for ggplot2
# cor_matrix_melted <- melt(cor_matrix)
#
# # Visualize with ggplot2
# ggplot(data = cor_matrix_melted, aes(x = Var1, y = Var2, fill = value)) +
#   geom_tile(color = "white") +
#   scale_fill_gradient2(low = "blue", high = "red", mid = "white",
#                        midpoint = 0, limit = c(-1, 1), space = "Lab",
#                        name = "Correlation") +
#   theme_minimal() +
#   theme(axis.text.x = element_text(angle = 45, vjust = 1,
#                                    size = 12, hjust = 1)) +
#   coord_fixed()
model = lm(log_suicides_no ~ ., data = data_train)
summary(model)
vif(model)
model = lm(log_suicides_no ~ . -regionEurope , data = data_train)
summary(model)
vif(model)
# modFull = lm(log_suicides_no ~ . -mgp -displacement -horsepower -cylinders, data = data_train)
# modZero = lm(log_mgp_square ~ 1, data = data_train)
# modInter = lm(log_mgp_square ~ weight + model_year, data = data_train)
dim(log_suicides_no)
library(dplyr)
library(ggplot2)
library(tidyr)
library(car)
library(MASS)
library(corrplot)
library(reshape2)
library(faraway)
library(caret)
data <- read.csv("master.csv", header = TRUE)
attach(data)
head(data)
str(data)
dim(data)
# Rename
data$gdp_for_year <- data$gdp_for_year....
data$gdp_for_year.... <- NULL
data$gdp_per_capita <- data$gdp_per_capita....
data$gdp_per_capita.... <- NULL
# Check for missing values
missing_values <- sapply(data, function(x) sum(is.na(x)))
print(missing_values)
data_clean <- data
data_clean <- dplyr::select(data_clean, -HDI.for.year, -country.year, -suicides.100k.pop)
# Convert gdp_for_year.... to numeric after removing commas
data_clean <- data_clean %>%
mutate(gdp_for_year = as.numeric(gsub(",", "", gdp_for_year)))
str(data_clean)
hist(suicides_no, breaks = 50)
log_suicides_no <- log(suicides_no + 1)
hist(log_suicides_no, breaks = 30)
boxplot(log_suicides_no)
boxplot(year)
hist(year, breaks = 20)
pie(table(year))
pie(table(sex))
barplot(table(sex))
boxplot(log(population))
hist(log(gdp_per_capita)^2, breaks = 50)
boxplot(log(gdp_for_year))
hist(log(gdp_for_year), breaks = 20, main = "Histogram of GDP for Year", xlab = "GDP for Year")
barplot(table(generation))
pie(table(generation))
barplot(table(age))
pie(table(age))
data_clean$log_suicides_no <- log(suicides_no + 1)
data_clean$suicides_no <- NULL
# Process 'year' column
data_clean$year <- data_clean$year - 1985 + 1
# # Create dummy variables for the 'country' column
# dummy_vars <- model.matrix(~ country, data = data_clean)
#
# # Remove the intercept column
# dummy_vars <- dummy_vars[, -1]
#
# # Combine the dummy variables with the original data frame
# data_clean <- cbind(data_clean, dummy_vars)
#
# data_clean <- dplyr::select(data_clean, -country)
# str(data_clean)
# Define country groups based on continents or regions
data_clean$regionEurope <- ifelse(data_clean$country %in% c("Austria", "Iceland", "Netherlands", "Belgium", "Bulgaria", "France", "Greece", "Ireland", "Italy", "Luxembourg", "Malta", "Norway", "Portugal", "Romania", "Spain", "Sweden", "United Kingdom", "Ukraine", "Finland", "Switzerland", "Serbia", "Slovenia", "Slovakia", "Albania", "Denmark", "Estonia", "Latvia", "Lithuania", "Belarus", "Croatia", "Czech Republic", "Germany", "Hungary", "Poland", "San Marino", "Bosnia and Herzegovina"), 1, 0)
data_clean$regionAsia <- ifelse(data_clean$country %in% c("Israel", "Japan", "Republic of Korea", "Singapore", "Turkmenistan", "Thailand", "Russian Federation", "Kazakhstan", "Kyrgyzstan", "Armenia", "Azerbaijan", "Philippines", "Cyprus", "Qatar", "Sri Lanka", "Maldives", "Turkey", "United Arab Emirates", "Oman", "Bahrain", "Uzbekistan", "Georgia", "Macau"), 1, 0)
data_clean$regionAfrica <- ifelse(data_clean$country %in% c("Mauritius", "South Africa", "Seychelles", "Cabo Verde"), 1, 0)
data_clean$regionNorthAmerica <- ifelse(data_clean$country %in% c("Canada", "Costa Rica", "Guatemala", "Mexico", "Puerto Rico", "United States", "Belize", "Saint Lucia", "Antigua and Barbuda", "Trinidad and Tobago", "Panama", "Saint Vincent and Grenadines", "Cuba", "El Salvador", "Bahamas", "Jamaica", "Saint Kitts and Nevis", "Dominica"), 1, 0)
data_clean$regionSouthAmerica <- ifelse(data_clean$country %in% c("Argentina", "Brazil", "Chile", "Colombia", "Ecuador", "Paraguay", "Suriname", "Uruguay", "Guyana"), 1, 0)
data_clean$regionOceania <- ifelse(data_clean$country %in% c("Australia", "New Zealand", "Fiji", "Kiribati", "Montenegro"), 1, 0)
# Remove the 'country' column after creating 'region'
data_clean$country <- NULL
data_clean$sexMale <- ifelse(data_clean$sex == "male", 1, 0)
data_clean$sex <- NULL
data_clean$geneX <- ifelse(data_clean$generation == "Generation X", 1, 0)
data_clean$geneMillenials <- ifelse(data_clean$generation == "Millenials", 1, 0)
data_clean$geneBoomers <- ifelse(data_clean$generation == "Boomers", 1, 0)
data_clean$geneSilent <- ifelse(data_clean$generation == "Silent", 1, 0)
data_clean$generation <- NULL
# The other generation would be G.I. Generation
data_clean$Age15to24 <- ifelse(data_clean$age == "15-24 years", 1, 0)
data_clean$Age25to34 <- ifelse(data_clean$age == "25-34 years", 1, 0)
data_clean$Age35to54 <- ifelse(data_clean$age == "35-54 years", 1, 0)
data_clean$Age55to74 <- ifelse(data_clean$age == "55-74 years", 1, 0)
data_clean$age <- NULL
#The other generation would be 75+ years
detach(data)
attach(data_clean)
str(data_clean)
set.seed(1)
sample_size <- floor(0.8 * nrow(data_clean))
train_indices <- sample(seq_len(nrow(data_clean)), size = sample_size)
data_train <- data_clean[train_indices, ]
data_test <- data_clean[-train_indices, ]
detach(data_clean)
attach(data_train)
cor_matrix <- cor(data_train)
cor_matrix
# corrplot(cor_matrix, method = "color", type = "upper",
#          tl.col = "black", tl.srt = 45, addCoef.col = "black")
#
# # Convert the correlation matrix to long format for ggplot2
# cor_matrix_melted <- melt(cor_matrix)
#
# # Visualize with ggplot2
# ggplot(data = cor_matrix_melted, aes(x = Var1, y = Var2, fill = value)) +
#   geom_tile(color = "white") +
#   scale_fill_gradient2(low = "blue", high = "red", mid = "white",
#                        midpoint = 0, limit = c(-1, 1), space = "Lab",
#                        name = "Correlation") +
#   theme_minimal() +
#   theme(axis.text.x = element_text(angle = 45, vjust = 1,
#                                    size = 12, hjust = 1)) +
#   coord_fixed()
model = lm(log_suicides_no ~ ., data = data_train)
summary(model)
vif(model)
model = lm(log_suicides_no ~ . -regionEurope , data = data_train)
summary(model)
vif(model)
# modFull = lm(log_suicides_no ~ . -mgp -displacement -horsepower -cylinders, data = data_train)
# modZero = lm(log_mgp_square ~ 1, data = data_train)
# modInter = lm(log_mgp_square ~ weight + model_year, data = data_train)
library(dplyr)
library(ggplot2)
library(tidyr)
library(car)
library(MASS)
library(corrplot)
library(reshape2)
library(faraway)
library(caret)
data <- read.csv("master.csv", header = TRUE)
attach(data)
head(data)
str(data)
dim(data)
# Rename
data$gdp_for_year <- data$gdp_for_year....
data$gdp_for_year.... <- NULL
data$gdp_per_capita <- data$gdp_per_capita....
data$gdp_per_capita.... <- NULL
# Check for missing values
missing_values <- sapply(data, function(x) sum(is.na(x)))
print(missing_values)
data_clean <- data
data_clean <- dplyr::select(data_clean, -HDI.for.year, -country.year, -suicides.100k.pop)
# Convert gdp_for_year.... to numeric after removing commas
data_clean <- data_clean %>%
mutate(gdp_for_year = as.numeric(gsub(",", "", gdp_for_year)))
str(data_clean)
hist(suicides_no, breaks = 50)
log_suicides_no <- log(suicides_no + 1)
hist(log_suicides_no, breaks = 30)
boxplot(log_suicides_no)
boxplot(year)
hist(year, breaks = 20)
pie(table(year))
pie(table(sex))
barplot(table(sex))
boxplot(log(population))
hist(log(gdp_per_capita)^2, breaks = 50)
boxplot(log(gdp_for_year))
hist(log(gdp_for_year), breaks = 20, main = "Histogram of GDP for Year", xlab = "GDP for Year")
barplot(table(generation))
pie(table(generation))
barplot(table(age))
pie(table(age))
data_clean$log_suicides_no <- log(suicides_no + 1)
data_clean$suicides_no <- NULL
# Process 'year' column
data_clean$year <- data_clean$year - 1985 + 1
# # Create dummy variables for the 'country' column
# dummy_vars <- model.matrix(~ country, data = data_clean)
#
# # Remove the intercept column
# dummy_vars <- dummy_vars[, -1]
#
# # Combine the dummy variables with the original data frame
# data_clean <- cbind(data_clean, dummy_vars)
#
# data_clean <- dplyr::select(data_clean, -country)
# str(data_clean)
# Define country groups based on continents or regions
data_clean$regionEurope <- ifelse(data_clean$country %in% c("Austria", "Iceland", "Netherlands", "Belgium", "Bulgaria", "France", "Greece", "Ireland", "Italy", "Luxembourg", "Malta", "Norway", "Portugal", "Romania", "Spain", "Sweden", "United Kingdom", "Ukraine", "Finland", "Switzerland", "Serbia", "Slovenia", "Slovakia", "Albania", "Denmark", "Estonia", "Latvia", "Lithuania", "Belarus", "Croatia", "Czech Republic", "Germany", "Hungary", "Poland", "San Marino", "Bosnia and Herzegovina"), 1, 0)
data_clean$regionAsia <- ifelse(data_clean$country %in% c("Israel", "Japan", "Republic of Korea", "Singapore", "Turkmenistan", "Thailand", "Russian Federation", "Kazakhstan", "Kyrgyzstan", "Armenia", "Azerbaijan", "Philippines", "Cyprus", "Qatar", "Sri Lanka", "Maldives", "Turkey", "United Arab Emirates", "Oman", "Bahrain", "Uzbekistan", "Georgia", "Macau"), 1, 0)
data_clean$regionAfrica <- ifelse(data_clean$country %in% c("Mauritius", "South Africa", "Seychelles", "Cabo Verde"), 1, 0)
data_clean$regionNorthAmerica <- ifelse(data_clean$country %in% c("Canada", "Costa Rica", "Guatemala", "Mexico", "Puerto Rico", "United States", "Belize", "Saint Lucia", "Antigua and Barbuda", "Trinidad and Tobago", "Panama", "Saint Vincent and Grenadines", "Cuba", "El Salvador", "Bahamas", "Jamaica", "Saint Kitts and Nevis", "Dominica"), 1, 0)
data_clean$regionSouthAmerica <- ifelse(data_clean$country %in% c("Argentina", "Brazil", "Chile", "Colombia", "Ecuador", "Paraguay", "Suriname", "Uruguay", "Guyana"), 1, 0)
data_clean$regionOceania <- ifelse(data_clean$country %in% c("Australia", "New Zealand", "Fiji", "Kiribati", "Montenegro"), 1, 0)
# Remove the 'country' column after creating 'region'
data_clean$country <- NULL
data_clean$sexMale <- ifelse(data_clean$sex == "male", 1, 0)
data_clean$sex <- NULL
data_clean$geneX <- ifelse(data_clean$generation == "Generation X", 1, 0)
data_clean$geneMillenials <- ifelse(data_clean$generation == "Millenials", 1, 0)
data_clean$geneBoomers <- ifelse(data_clean$generation == "Boomers", 1, 0)
data_clean$geneSilent <- ifelse(data_clean$generation == "Silent", 1, 0)
data_clean$generation <- NULL
# The other generation would be G.I. Generation
data_clean$Age15to24 <- ifelse(data_clean$age == "15-24 years", 1, 0)
data_clean$Age25to34 <- ifelse(data_clean$age == "25-34 years", 1, 0)
data_clean$Age35to54 <- ifelse(data_clean$age == "35-54 years", 1, 0)
data_clean$Age55to74 <- ifelse(data_clean$age == "55-74 years", 1, 0)
data_clean$age <- NULL
#The other generation would be 75+ years
detach(data)
attach(data_clean)
str(data_clean)
set.seed(1)
sample_size <- floor(0.8 * nrow(data_clean))
train_indices <- sample(seq_len(nrow(data_clean)), size = sample_size)
data_train <- data_clean[train_indices, ]
data_test <- data_clean[-train_indices, ]
detach(data_clean)
attach(data_train)
cor_matrix <- cor(data_train)
cor_matrix
# corrplot(cor_matrix, method = "color", type = "upper",
#          tl.col = "black", tl.srt = 45, addCoef.col = "black")
#
# # Convert the correlation matrix to long format for ggplot2
# cor_matrix_melted <- melt(cor_matrix)
#
# # Visualize with ggplot2
# ggplot(data = cor_matrix_melted, aes(x = Var1, y = Var2, fill = value)) +
#   geom_tile(color = "white") +
#   scale_fill_gradient2(low = "blue", high = "red", mid = "white",
#                        midpoint = 0, limit = c(-1, 1), space = "Lab",
#                        name = "Correlation") +
#   theme_minimal() +
#   theme(axis.text.x = element_text(angle = 45, vjust = 1,
#                                    size = 12, hjust = 1)) +
#   coord_fixed()
model = lm(log_suicides_no ~ ., data = data_train)
summary(model)
vif(model)
model = lm(log_suicides_no ~ . -regionEurope , data = data_train)
summary(model)
vif(model)
# modFull = lm(log_suicides_no ~ . -mgp -displacement -horsepower -cylinders, data = data_train)
# modZero = lm(log_mgp_square ~ 1, data = data_train)
# modInter = lm(log_mgp_square ~ weight + model_year, data = data_train)
dim(log_suicides_no)
dim(data_train$log_suicides_no)
str(data_train)
cor(data_train$log_suicides_no, data_train$regionEurope)
str(data_train)
model2 = MASS::stepAIC(modInter, direction = "both", scope = list(lower = modZero, upper = modFull), k = 2)
modFull = lm(log_suicides_no ~ ., data = data_train)
modZero = lm(log_suicides_no ~ 1, data = data_train)
modInter = lm(log_suicides_no ~ year + population + gdp_for_year + regionAsia + regionNorthAmerica + sexMale + geneBoomers + Age25to34, data = data_train)
modFull = lm(log_suicides_no ~ ., data = data_train)
modZero = lm(log_suicides_no ~ 1, data = data_train)
modInter = lm(log_suicides_no ~ year + population + gdp_for_year + regionAsia + regionNorthAmerica + sexMale + geneBoomers + Age25to34, data = data_train)
model2 = MASS::stepAIC(modInter, direction = "both", scope = list(lower = modZero, upper = modFull), k = 2)
model3 = MASS::stepAIC(modInter, direction = "both", scope = list(lower = modZero, upper = modFull), k = log(nrow(data_train))
summary(model2)
summary(model3)
model2 = MASS::stepAIC(modInter, direction = "both", scope = list(lower = modZero, upper = modFull), k = 2)
model3 = MASS::stepAIC(modInter, direction = "both", scope = list(lower = modZero, upper = modFull), k = log(nrow(data_train)))
summary(model2)
summary(model3)
summary(model)
model = lm(log_suicides_no ~ ., data = data_train)
summary(model)
model4 = MASS::stepAIC(modFull, direction = "backward", scope = list(lower = modZero, upper = modFull), k = log(nrow(data_train)))
model2 = MASS::stepAIC(modFull, direction = "backward", scope = list(lower = modZero, upper = modFull), k = log(nrow(data_train)))
summary(model2)
modelAIC = MASS::stepAIC(modFull, direction = "backward", scope = list(lower = modZero, upper = modFull), k = log(nrow(data_train)))
modelAIC = MASS::stepAIC(modFull, direction = "backward", scope = list(lower = modZero, upper = modFull), k = 2)
summary(modelAIC)
